/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input s,
    input cout,
    output reg a,
    output reg b,
    output reg cin
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_fa_fsm_a;
  wire [1-1:0] M_fa_fsm_b;
  wire [1-1:0] M_fa_fsm_cin;
  wire [4-1:0] M_fa_fsm_first;
  wire [4-1:0] M_fa_fsm_second;
  wire [4-1:0] M_fa_fsm_third;
  wire [4-1:0] M_fa_fsm_fourth;
  reg [1-1:0] M_fa_fsm_s;
  reg [1-1:0] M_fa_fsm_cout;
  reg [5-1:0] M_fa_fsm_io_button;
  testing_2 fa_fsm (
    .clk(clk),
    .rst(rst),
    .s(M_fa_fsm_s),
    .cout(M_fa_fsm_cout),
    .io_button(M_fa_fsm_io_button),
    .a(M_fa_fsm_a),
    .b(M_fa_fsm_b),
    .cin(M_fa_fsm_cin),
    .first(M_fa_fsm_first),
    .second(M_fa_fsm_second),
    .third(M_fa_fsm_third),
    .fourth(M_fa_fsm_fourth)
  );
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_3 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_led[0+7-:8] = {4'h8{M_fa_fsm_cin}};
    io_led[8+7-:8] = {4'h8{M_fa_fsm_b}};
    io_led[16+7-:8] = {4'h8{M_fa_fsm_a}};
    M_seg_values = 16'h0000;
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
    M_seg_values = {M_fa_fsm_first, M_fa_fsm_second, M_fa_fsm_third, M_fa_fsm_fourth};
    a = M_fa_fsm_a;
    b = M_fa_fsm_b;
    cin = M_fa_fsm_cin;
    M_fa_fsm_s = s;
    M_fa_fsm_cout = cout;
    M_fa_fsm_io_button[1+0-:1] = io_button[1+0-:1];
    M_fa_fsm_io_button[3+0-:1] = io_button[3+0-:1];
    M_fa_fsm_io_button[4+0-:1] = io_button[4+0-:1];
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
  end
endmodule
